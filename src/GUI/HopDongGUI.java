package GUI;

import BUS.ChucVu_BUS;
import BUS.HopDong_BUS;
import BUS.NhanVienBUS;
import DTO.ChucVu_DTO;
import DTO.HopDong_DTO;
import DTO.NhanVienDTO;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class HopDongGUI extends javax.swing.JPanel {
    ArrayList<HopDong_DTO> arrHD=new ArrayList<HopDong_DTO>();
    HopDong_BUS HDBUS=new HopDong_BUS();
    NhanVienBUS NVBUS=new NhanVienBUS();
    DefaultTableModel modelHD;
    DefaultTableModel modelNV;
    public HopDongGUI() {
        initComponents();
        rebuildFrame();
        modelHD=(DefaultTableModel) tbHopDong.getModel();
        modelNV=(DefaultTableModel) tbNVHD.getModel();
        loadListHopDong();
        loadListNhanVien();
        KhoiTaoBTN();
    }
    public void loadListNhanVien(){
        modelNV.setRowCount(0);
        try {
            NVBUS.docDSNV();
        } catch (Exception ex) {
            Logger.getLogger(HopDongGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        for(int i=0;i<NhanVienBUS.dsnv.size();i++){
            NhanVienDTO NV=NhanVienBUS.dsnv.get(i);
            String id_nhanvien=NV.getId();
            String tennhanvien=NV.getName();
            Object[] row={id_nhanvien,tennhanvien};
            modelNV.addRow(row);
        }
    }
    public void loadListHopDong(){ 
        modelHD.setRowCount(0);
        arrHD=HDBUS.getAllHopDong();
        for(int i=0;i<arrHD.size();i++){
            HopDong_DTO HD=arrHD.get(i);
            int id_hopdong=HD.getID_hopdong();
            String id_nhanvien=HD.getID_nhanvien();
            String tennhanvien=HD.getTennhanvien();
            String loaihopdong=HD.getLoaihopdong();
            SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
            Date dateKT=null;
            try {
               dateKT=format.parse(HD.getNgayKT());
            } catch (ParseException ex) {
                Logger.getLogger(HopDongGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            Date dateHT= new Date();
            String tinhtrang;
            if(dateHT.compareTo(dateKT)<0){
            tinhtrang="Còn hạn";}
            else{
                tinhtrang="Hết hạn";
            }
            Object[] row={id_nhanvien,tennhanvien,id_hopdong,loaihopdong,tinhtrang};
            modelHD.addRow(row);
        }
    }
    public void KhoiTaoBTN(){
        btnXoaHD.setEnabled(false);
        btnSuaHD.setEnabled(false);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnTTHD = new javax.swing.JPanel();
        pnTimKiemHD = new javax.swing.JPanel();
        spTimKiemHD = new javax.swing.JScrollPane();
        tbHopDong = new javax.swing.JTable();
        lbTimKiemHD = new javax.swing.JLabel();
        tfTimKiemHD = new javax.swing.JTextField();
        cbTimKiemHD = new javax.swing.JComboBox<>();
        lbTTHD = new javax.swing.JLabel();
        lbNgayBDHD = new javax.swing.JLabel();
        lbNgayKTHD = new javax.swing.JLabel();
        lbTenNVHD = new javax.swing.JLabel();
        lbViTri = new javax.swing.JLabel();
        lbLoaiHD = new javax.swing.JLabel();
        lbImage1 = new javax.swing.JLabel();
        tfViTri = new javax.swing.JTextField();
        cbbLoaiHD = new javax.swing.JComboBox<>();
        tfTenNVHD = new javax.swing.JTextField();
        btnThemHD = new javax.swing.JButton();
        btnSuaHD = new javax.swing.JButton();
        btnXoaHD = new javax.swing.JButton();
        tfNgayBDHD = new com.toedter.calendar.JDateChooser();
        tfNgayKTHD = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        tfIDNVHD = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbNVHD = new javax.swing.JTable();

        pnTTHD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnTTHDMousePressed(evt);
            }
        });

        pnTimKiemHD.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tbHopDong.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Tên nhân viên", "Mã hợp đồng", "Loại hợp đồng", "Tình trạng"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbHopDong.setRowHeight(25);
        tbHopDong.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tbHopDongMousePressed(evt);
            }
        });
        spTimKiemHD.setViewportView(tbHopDong);

        lbTimKiemHD.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        lbTimKiemHD.setText("Tìm kiếm");

        tfTimKiemHD.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        tfTimKiemHD.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                tfTimKiemHDCaretUpdate(evt);
            }
        });

        cbTimKiemHD.setFont(new java.awt.Font("Segoe UI Light", 1, 14)); // NOI18N
        cbTimKiemHD.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả", "ID", "Tên nhân viên", "Mã hợp đồng", "Loại hợp đồng", "Tình trạng" }));

        javax.swing.GroupLayout pnTimKiemHDLayout = new javax.swing.GroupLayout(pnTimKiemHD);
        pnTimKiemHD.setLayout(pnTimKiemHDLayout);
        pnTimKiemHDLayout.setHorizontalGroup(
            pnTimKiemHDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnTimKiemHDLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(lbTimKiemHD)
                .addGap(18, 18, 18)
                .addComponent(tfTimKiemHD, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cbTimKiemHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(pnTimKiemHDLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(spTimKiemHD)
                .addContainerGap())
        );
        pnTimKiemHDLayout.setVerticalGroup(
            pnTimKiemHDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnTimKiemHDLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnTimKiemHDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfTimKiemHD, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(pnTimKiemHDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbTimKiemHD)
                        .addComponent(cbTimKiemHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(spTimKiemHD, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        lbTTHD.setFont(new java.awt.Font("Segoe UI Semibold", 1, 24)); // NOI18N
        lbTTHD.setText("Thông tin hợp đồng");

        lbNgayBDHD.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        lbNgayBDHD.setText("Ngày bắt đầu");

        lbNgayKTHD.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        lbNgayKTHD.setText("Ngày kết thúc");

        lbTenNVHD.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        lbTenNVHD.setText("Tên nhân viên");

        lbViTri.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        lbViTri.setText("Chức vụ");

        lbLoaiHD.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        lbLoaiHD.setText("Loại hợp đồng");

        lbImage1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tfViTri.setFont(new java.awt.Font("Segoe UI Light", 1, 13)); // NOI18N
        tfViTri.setEnabled(false);

        cbbLoaiHD.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Có thời hạn", "Không thời hạn", "Thử việc" }));
        cbbLoaiHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbLoaiHDActionPerformed(evt);
            }
        });

        tfTenNVHD.setFont(new java.awt.Font("Segoe UI Light", 1, 13)); // NOI18N
        tfTenNVHD.setEnabled(false);

        btnThemHD.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        btnThemHD.setText("Thêm");
        btnThemHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemHDActionPerformed(evt);
            }
        });

        btnSuaHD.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        btnSuaHD.setText("Sửa");
        btnSuaHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaHDActionPerformed(evt);
            }
        });

        btnXoaHD.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        btnXoaHD.setText("Xóa");
        btnXoaHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaHDActionPerformed(evt);
            }
        });

        tfNgayBDHD.setDateFormatString("yyyy-MM-dd");
        tfNgayBDHD.setMaxSelectableDate(new java.util.Date(253370743265000L));

        tfNgayKTHD.setDateFormatString("yyyy-MM-dd");
        tfNgayKTHD.setMaxSelectableDate(new java.util.Date(253370743269000L));

        jLabel1.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        jLabel1.setText("ID_ nhân viên");

        tfIDNVHD.setEnabled(false);

        tbNVHD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID_Nhân viên", "Tên nhân viên"
            }
        ));
        tbNVHD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tbNVHDMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tbNVHD);

        javax.swing.GroupLayout pnTTHDLayout = new javax.swing.GroupLayout(pnTTHD);
        pnTTHD.setLayout(pnTTHDLayout);
        pnTTHDLayout.setHorizontalGroup(
            pnTTHDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnTTHDLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnTTHDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnTTHDLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(pnTTHDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnTTHDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(pnTTHDLayout.createSequentialGroup()
                                    .addComponent(lbNgayKTHD)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                                    .addComponent(tfNgayKTHD, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(pnTTHDLayout.createSequentialGroup()
                                    .addComponent(lbNgayBDHD)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(tfNgayBDHD, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnTTHDLayout.createSequentialGroup()
                                    .addComponent(lbViTri)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(tfViTri, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(pnTTHDLayout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addGap(64, 64, 64)
                                    .addGroup(pnTTHDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(cbbLoaiHD, 0, 230, Short.MAX_VALUE)
                                        .addComponent(tfTenNVHD)
                                        .addComponent(tfIDNVHD))))
                            .addComponent(lbLoaiHD)
                            .addComponent(lbTenNVHD)))
                    .addComponent(lbTTHD))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 513, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnTTHDLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnThemHD, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(btnSuaHD, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(btnXoaHD, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(201, 201, 201))
            .addGroup(pnTTHDLayout.createSequentialGroup()
                .addComponent(pnTimKiemHD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(pnTTHDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnTTHDLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(lbImage1)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        pnTTHDLayout.setVerticalGroup(
            pnTTHDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnTTHDLayout.createSequentialGroup()
                .addGroup(pnTTHDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnTTHDLayout.createSequentialGroup()
                        .addComponent(lbTTHD)
                        .addGap(18, 18, 18)
                        .addGroup(pnTTHDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(tfIDNVHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnTTHDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbTenNVHD)
                            .addComponent(tfTenNVHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnTTHDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbLoaiHD)
                            .addComponent(cbbLoaiHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnTTHDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbNgayBDHD)
                            .addComponent(tfNgayBDHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnTTHDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbNgayKTHD)
                            .addComponent(tfNgayKTHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnTTHDLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(24, 24, 24)
                .addGroup(pnTTHDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbViTri)
                    .addComponent(tfViTri, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnTTHDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThemHD)
                    .addComponent(btnSuaHD)
                    .addComponent(btnXoaHD))
                .addGap(30, 30, 30)
                .addComponent(pnTimKiemHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(pnTTHDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnTTHDLayout.createSequentialGroup()
                    .addGap(0, 135, Short.MAX_VALUE)
                    .addComponent(lbImage1)
                    .addGap(0, 462, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnTTHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnTTHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    
    private void rebuildFrame() {
        
    }
    
    // <editor-fold defaultstate="collapsed" desc="Event Handling">   
    private void cbbLoaiHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbLoaiHDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbbLoaiHDActionPerformed

    private void btnThemHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemHDActionPerformed
         try{
            SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
            String getdateBD = format.format(tfNgayBDHD.getDate());
            String getdateKT = format.format(tfNgayKTHD.getDate());
            int idcv = 0;
            for (ChucVu_DTO cv:ChucVu_BUS.dscv)
                if (tfViTri.getText().trim().equalsIgnoreCase(cv.tenchucvu)) {
                    idcv = cv.ID_chucvu;
                    break;
                }
            if (
                tfTenNVHD.getText().trim().equals("") || 
                tfViTri.getText().trim().equals("") || 
                    getdateBD.trim().equals("")||
                    getdateKT.trim().equals(""))
                JOptionPane.showMessageDialog(this,"Vui lòng nhập đủ thông tin");
            else {       
                HopDong_DTO hd = new HopDong_DTO();
                hd.setTennhanvien(tfTenNVHD.getText());
                hd.setLoaihopdong((String) cbbLoaiHD.getSelectedItem());
                hd.setNgayBD(getdateBD);
                hd.setNgayKT(getdateKT);
                hd.setID_chucvu(idcv);
                JOptionPane.showMessageDialog(this, HDBUS.addHopDong(hd));
                loadListHopDong();
            }
        }       catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Thông tin không hợp lệ");
             System.out.println(ex);
        }
    }//GEN-LAST:event_btnThemHDActionPerformed

    private void btnSuaHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaHDActionPerformed
       int i=tbHopDong.getSelectedRow();
       try{
           SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
           String getdateBD = format.format(tfNgayBDHD.getDate());
           String getdateKT = format.format(tfNgayKTHD.getDate());
           int idcv = 0, idhd = 0;
           ArrayList<HopDong_DTO> hdlist = new HopDong_BUS().getAllHopDong();
            for (ChucVu_DTO cv:ChucVu_BUS.dscv)
                if (tfViTri.getText().trim().equalsIgnoreCase(cv.tenchucvu)) {
                    idcv = cv.ID_chucvu;
                    break;
                }
            for (HopDong_DTO hd:hdlist)
                if (tfIDNVHD.getText().trim().equalsIgnoreCase(hd.getID_nhanvien())) {
                    idhd = hd.getID_hopdong();
                    break;
                }
           if (
                tfTenNVHD.getText().trim().equals("") || 
                tfViTri.getText().trim().equals("") || 
                getdateBD.trim().equals("")||
                getdateKT.trim().equals(""))
                JOptionPane.showMessageDialog(this,"Vui lòng nhập đủ thông tin");
       if(i<0){
           JOptionPane.showMessageDialog(this,"Vui lòng chọn hợp đồng để sửa");}
       else{    
           HopDong_DTO hd = new HopDong_DTO();
           hd.setID_hopdong(idhd);
           hd.setTennhanvien(tfTenNVHD.getText());
           hd.setLoaihopdong((String) cbbLoaiHD.getSelectedItem());
           hd.setNgayBD(getdateBD);
           hd.setNgayKT(getdateKT);
           hd.setID_chucvu(idcv);
           JOptionPane.showMessageDialog(this, HDBUS.updateHopDong(hd));
           loadListHopDong();
       }
       }catch(Exception ex){
           JOptionPane.showMessageDialog(this, "Thông tin không hợp lệ");
           System.out.println(ex);
       }
        btnXoaHD.setEnabled(false);
        btnSuaHD.setEnabled(false);
    }//GEN-LAST:event_btnSuaHDActionPerformed

    private void btnXoaHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaHDActionPerformed
       int i=tbHopDong.getSelectedRow();
       try{
       if(i>=0){
           JOptionPane.showMessageDialog(this, HDBUS.delHopDong((int) tbHopDong.getValueAt(i,2)));
       }
       else{
           JOptionPane.showMessageDialog(this,"Vui lòng chọn hợp đồng để xóa");
       }
       loadListHopDong();
       }catch(Exception ex){
           JOptionPane.showMessageDialog(this, "Xóa thất bại");
       }
        btnXoaHD.setEnabled(false);
        btnSuaHD.setEnabled(false);
    }//GEN-LAST:event_btnXoaHDActionPerformed

    private void tfTimKiemHDCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_tfTimKiemHDCaretUpdate
       modelHD.setRowCount(0);
        try{
        if(!tfTimKiemHD.getText().trim().equals("")){
        String st=tfTimKiemHD.getText();
        int select=0;
        if(cbTimKiemHD.getSelectedItem().equals("ID")){
                arrHD=HDBUS.checkHopDong(st,select,0);
            }
        if(cbTimKiemHD.getSelectedItem().equals("Tên nhân viên")){
                arrHD=HDBUS.checkHopDong(st,select,1);
            }
        
        if(cbTimKiemHD.getSelectedItem().equals("Mã hợp đồng")){
                select=Integer.parseInt(tfTimKiemHD.getText());
                arrHD=HDBUS.checkHopDong(st,select,2);
        }
        if(cbTimKiemHD.getSelectedItem().equals("Loại hợp đồng")){
                arrHD=HDBUS.checkHopDong(st,select,3);
        }
        if(cbTimKiemHD.getSelectedItem().equals("Tình trạng")){
                arrHD=HDBUS.checkHopDong(st,select,4);
        }
        if(cbTimKiemHD.getSelectedItem().equals("Tất cả")){
                try{
                    select=Integer.parseInt(tfTimKiemHD.getText());
                }catch(NumberFormatException e){
                    select=0;
                }
                arrHD=HDBUS.checkHopDong(st,select,5);           
        }
            for(int i=0;i<arrHD.size();i++){
            HopDong_DTO HD=arrHD.get(i);
            int id_hopdong=HD.getID_hopdong();
            String id_nhanvien=HD.getID_nhanvien();
            String tennhanvien=HD.getTennhanvien();
            String loaihopdong=HD.getLoaihopdong();
            String tinhtrang="Còn hạn";
            Object[] row={id_nhanvien,tennhanvien,id_hopdong,loaihopdong,tinhtrang};
            modelHD.addRow(row);
            }
        }
        else{
            loadListHopDong();
        }
        }catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_tfTimKiemHDCaretUpdate

    private void pnTTHDMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnTTHDMousePressed
       KhoiTaoBTN();
       tbHopDong.getSelectionModel().clearSelection();
       tbNVHD.getSelectionModel().clearSelection();
       loadListNhanVien();
    }//GEN-LAST:event_pnTTHDMousePressed

    private void tbHopDongMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbHopDongMousePressed
        btnXoaHD.setEnabled(true);
        btnSuaHD.setEnabled(true);
        int id=(int) tbHopDong.getValueAt(tbHopDong.getSelectedRow(), 2);
        HopDong_DTO HD= HDBUS.HienThiHD(id);
        Date dateBD = null;
        Date dateKT = null;
        try {
            dateBD = new SimpleDateFormat("yyyy-MM-dd").parse(HD.getNgayBD());
        } catch (ParseException ex) {
            Logger.getLogger(HopDongGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            dateKT = new SimpleDateFormat("yyyy-MM-dd").parse(HD.getNgayKT());
        } catch (ParseException ex) {
            Logger.getLogger(HopDongGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        tfTenNVHD.setText(HD.getTennhanvien());
        tfIDNVHD.setText(HD.getID_nhanvien());
        tfNgayBDHD.setDate(dateBD);
        tfNgayKTHD.setDate(dateKT);
        tfViTri.setText(HD.getChucvu());
        cbbLoaiHD.getModel().setSelectedItem(HD.getLoaihopdong());        
    }//GEN-LAST:event_tbHopDongMousePressed

    private void tbNVHDMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbNVHDMousePressed
        try {
            if (NhanVienBUS.dsnv == null || NhanVienBUS.dsnv.isEmpty()) 
            new NhanVienBUS().docDSNV();
            if (ChucVu_BUS.dscv == null || ChucVu_BUS.dscv.isEmpty())
            new ChucVu_BUS().docDSCV();
        } catch (Exception ex) {
            Logger.getLogger(HopDongGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        tfTenNVHD.setText(tbNVHD.getValueAt(tbNVHD.getSelectedRow(),1)+"");
        tfIDNVHD.setText(tbNVHD.getValueAt(tbNVHD.getSelectedRow(),0)+"");
        for (NhanVienDTO nv:NhanVienBUS.dsnv)
            if (tfIDNVHD.getText().trim().equals(nv.id)){
                for (ChucVu_DTO cv:ChucVu_BUS.dscv)
                    if (nv.id_chucvu == cv.ID_chucvu) {
                        tfViTri.setText(cv.tenchucvu);
                        break;
                    }
                break;
            } 
    }//GEN-LAST:event_tbNVHDMousePressed
    //</editor-fold>

    
    // <editor-fold defaultstate="collapsed" desc="Variable Declaration">   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSuaHD;
    private javax.swing.JButton btnThemHD;
    private javax.swing.JButton btnXoaHD;
    private javax.swing.JComboBox<String> cbTimKiemHD;
    private javax.swing.JComboBox<String> cbbLoaiHD;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbImage1;
    private javax.swing.JLabel lbLoaiHD;
    private javax.swing.JLabel lbNgayBDHD;
    private javax.swing.JLabel lbNgayKTHD;
    private javax.swing.JLabel lbTTHD;
    private javax.swing.JLabel lbTenNVHD;
    private javax.swing.JLabel lbTimKiemHD;
    private javax.swing.JLabel lbViTri;
    private javax.swing.JPanel pnTTHD;
    private javax.swing.JPanel pnTimKiemHD;
    private javax.swing.JScrollPane spTimKiemHD;
    private javax.swing.JTable tbHopDong;
    private javax.swing.JTable tbNVHD;
    private javax.swing.JTextField tfIDNVHD;
    private com.toedter.calendar.JDateChooser tfNgayBDHD;
    private com.toedter.calendar.JDateChooser tfNgayKTHD;
    private javax.swing.JTextField tfTenNVHD;
    private javax.swing.JTextField tfTimKiemHD;
    private javax.swing.JTextField tfViTri;
    // End of variables declaration//GEN-END:variables
    //</editor-fold>
}
